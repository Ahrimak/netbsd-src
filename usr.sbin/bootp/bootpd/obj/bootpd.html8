<!DOCTYPE html>
<html>
<!-- This is an automatically generated file.  Do not edit.
   Copyright (c) 1988, 1989, 1991 Carnegie Mellon University
  
  	$NetBSD: bootpd.8,v 1.11 2017/07/03 21:35:30 wiz Exp $
   -->
<head>
  <meta charset="utf-8"/>
  <link rel="stylesheet" href="../style.css" type="text/css" media="all"/>
  <title>BOOTPD(8)</title>
</head>
<body>
<table class="head">
  <tr>
    <td class="head-ltitle">BOOTPD(8)</td>
    <td class="head-vol">System Manager's Manual</td>
    <td class="head-rtitle">BOOTPD(8)</td>
  </tr>
</table>
<div class="manual-text">
<section class="Sh">
<h1 class="Sh" id="NAME"><a class="permalink" href="#NAME">NAME</a></h1>
bootpd, bootpgw - Internet Boot Protocol server/gateway
</section>
<section class="Sh">
<h1 class="Sh" id="SYNOPSIS"><a class="permalink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<b>bootpd</b> [ <b>-i</b> <b>-s</b> <b>-t</b> timeout <b>-d</b> level <b>-c</b>
  chdir-path ] [ <i>bootptab</i> [ <i>dumpfile</i> ] ]
<br/>
<b>bootpgw</b> [ <b>-i</b> <b>-s</b> <b>-t</b> timeout <b>-d</b> level ] server
</section>
<section class="Sh">
<h1 class="Sh" id="DESCRIPTION"><a class="permalink" href="#DESCRIPTION">DESCRIPTION</a></h1>
<i>Bootpd</i> implements an Internet Bootstrap Protocol (BOOTP) server as
  defined in RFC951, RFC1532, and RFC1533. <i>Bootpgw</i> implements a simple
  BOOTP gateway which can be used to forward requests and responses between
  clients on one subnet and a BOOTP server (i.e. <i>bootpd</i>) on another
  subnet. While either <i>bootpd</i> or <i>bootpgw</i> will forward BOOTREPLY
  packets, only <i>bootpgw</i> will forward BOOTREQUEST packets.
<p class="Pp">One host on each network segment is normally configured to run
    either <i>bootpd</i> or <i>bootpgw</i> from <i>inetd</i> by including one of
    the following lines in the file <i>/etc/inetd.conf</i>:</p>
<dl class="Bl-tag">
  <dt></dt>
  <dd>bootps dgram udp wait root /usr/sbin/bootpd bootpd bootptab
    <br/>
    bootps dgram udp wait root /usr/sbin/bootpgw bootpgw server</dd>
</dl>
<p class="Pp">This mode of operation is referred to as &quot;inetd mode&quot;
    and causes <i>bootpd</i> (or <i>bootpgw</i>) to be started only when a boot
    request arrives. If it does not receive another packet within fifteen
    minutes of the last one it received, it will exit to conserve system
    resources. The <b>-t</b> option controls this timeout (see OPTIONS).</p>
<p class="Pp">It is also possible to run <i>bootpd</i> (or <i>bootpgw</i>) in
    &quot;standalone mode&quot; (without <i>inetd</i>) by simply invoking it
    from a shell like any other regular command. Standalone mode is particularly
    useful when <i>bootpd</i> is used with a large configuration database, where
    the start up delay might otherwise prevent timely response to client
    requests. (Automatic start up in standalone mode can be done by invoking
    <i>bootpd</i> from within <i>/etc/rc.local</i>, for example.) Standalone
    mode is less useful for <i>bootpgw</i> which has very little start up delay
    because it does not read a configuration file.</p>
<p class="Pp">Either program automatically detects whether it was invoked from
    inetd or from a shell and automatically selects the appropriate mode. The
    <b>-s</b> or <b>-i</b> option may be used to force standalone or inetd mode
    respectively (see OPTIONS).</p>
</section>
<section class="Sh">
<h1 class="Sh" id="OPTIONS"><a class="permalink" href="#OPTIONS">OPTIONS</a></h1>
<dl class="Bl-tag">
  <dt><b>-t</b><i>&#x00A0;timeout</i></dt>
  <dd>Specifies the <i>timeout</i> value (in minutes) that a <i>bootpd</i> or
      <i>bootpgw</i> process will wait for a BOOTP packet before exiting. If no
      packets are received for <i>timeout</i> minutes, then the program will
      exit. A timeout value of zero means &quot;run forever&quot;. In standalone
      mode, this option is forced to zero.</dd>
  <dt><b>-d</b><i>&#x00A0;debug-level</i></dt>
  <dd>Sets the <i>debug-level</i> variable that controls the amount of debugging
      messages generated. For example, -d4 or -d 4 will set the debugging level
      to 4. For compatibility with older versions of <i>bootpd</i>, omitting the
      numeric parameter (i.e. just -d) will simply increment the debug level by
      one.</dd>
  <dt><b>-c</b><i>&#x00A0;chdir-path</i></dt>
  <dd>Sets the current directory used by <i>bootpd</i> while checking the
      existence and size of client boot files. This is useful when client boot
      files are specified as relative pathnames, and <i>bootpd</i> needs to use
      the same current directory as the TFTP server (typically /tftpboot). This
      option is not recognized by <i>bootpgw</i>.</dd>
  <dt><b>-i</b></dt>
  <dd>Force inetd mode. This option is obsolete, but remains for compatibility
      with older versions of <i>bootpd</i>.</dd>
  <dt><b>-s</b></dt>
  <dd>Force standalone mode. This option is obsolete, but remains for
      compatibility with older versions of <i>bootpd</i>.</dd>
  <dt><i>bootptab</i></dt>
  <dd>Specifies the name of the configuration file from which <i>bootpd</i>
      loads its database of known clients and client options (<i>bootpd</i>
      only).</dd>
  <dt><i>dumpfile</i></dt>
  <dd>Specifies the name of the file that <i>bootpd</i> will dump its internal
      database into when it receives a SIGUSR1 signal (<i>bootpd</i> only). This
      option is only recognized if <i>bootpd</i> was compiled with the -DDEBUG
      flag.</dd>
  <dt><i>server</i></dt>
  <dd>Specifies the name of a BOOTP server to which <i>bootpgw</i> will forward
      all BOOTREQUEST packets it receives (<i>bootpgw</i> only).</dd>
</dl>
</section>
<section class="Sh">
<h1 class="Sh" id="OPERATION"><a class="permalink" href="#OPERATION">OPERATION</a></h1>
Both <i>bootpd</i> and <i>bootpgw</i> operate similarly in that both listen for
  any packets sent to the <i>bootps</i> port, and both simply forward any
  BOOTREPLY packets. They differ in their handling of BOOTREQUEST packets.
<p class="Pp">When <i>bootpgw</i> is started, it determines the address of a
    BOOTP server whose name is provided as a command line parameter. When
    <i>bootpgw</i> receives a BOOTREQUEST packet, it sets the &quot;gateway
    address&quot; and &quot;hop count&quot; fields in the packet and forwards
    the packet to the BOOTP server at the address determined earlier. Requests
    are forwarded only if they indicate that the client has been waiting for at
    least three seconds.</p>
<p class="Pp">When <i>bootpd</i> is started it reads a configuration file,
    (normally <i>/etc/bootptab</i>) that initializes the internal database of
    known clients and client options. This internal database is reloaded from
    the configuration file when <i>bootpd</i> receives a hangup signal (SIGHUP)
    or when it discovers that the configuration file has changed.</p>
<p class="Pp">When <i>bootpd</i> receives a BOOTREQUEST packet, it looks for a
    database entry matching the client request. If the client is known,
    <i>bootpd</i> composes a BOOTREPLY packet using the database entry found
    above, and sends the reply to the client (possibly using a gateway). If the
    client is unknown, the request is discarded (with a notice if debug &gt;
  0).</p>
<p class="Pp">If <i>bootpd</i> is compiled with the -DDEBUG option, receipt of a
    SIGUSR1 signal causes it to dump its internal database to the file
    <i>/etc/bootpd.dump</i> or the dumpfile specified as a command line
    parameter.</p>
<p class="Pp">During initialization, both programs determine the UDP port
    numbers to be used by calling <i>getservbyname</i> (which normally uses
    <i>/etc/services).</i> Two service names (and port numbers) are used:</p>
<dl class="Bl-tag">
  <dt></dt>
  <dd>bootps - BOOTP Server listening port
    <br/>
    bootpc - BOOTP Client destination port</dd>
</dl>
<p class="Pp">If the port numbers cannot be determined using
    <i>getservbyname</i> then the values default to bootps=67 and bootpc=68.</p>
</section>
<section class="Sh">
<h1 class="Sh" id="FILES"><a class="permalink" href="#FILES">FILES</a></h1>
<dl class="Bl-tag">
  <dt>/etc/bootptab</dt>
  <dd>Database file read by <i>bootpd</i>.</dd>
  <dt>/etc/bootpd.dump</dt>
  <dd>Debugging dump file created by <i>bootpd</i>.</dd>
  <dt>/etc/services</dt>
  <dd>Internet service numbers.</dd>
  <dt>/tftpboot</dt>
  <dd>Current directory typically used by the TFTP server and <i>bootpd</i>.
    <p class="Pp"></p>
  </dd>
</dl>
</section>
<section class="Sh">
<h1 class="Sh" id="BUGS"><a class="permalink" href="#BUGS">BUGS</a></h1>
Individual host entries must not exceed 1024 characters.
<p class="Pp"></p>
</section>
<section class="Sh">
<h1 class="Sh" id="CREDITS"><a class="permalink" href="#CREDITS">CREDITS</a></h1>
This distribution is currently maintained by Walter L. Wimer
  &lt;walt+@cmu.edu&gt;.
<p class="Pp">The original BOOTP server was created by Bill Croft at Stanford
    University in January 1986.</p>
<p class="Pp">The current version of <i>bootpd</i> is primarily the work of
    David Kovar, Drew D. Perkins, and Walter L. Wimer, at Carnegie Mellon
    University.</p>
<dl class="Bl-tag">
  <dt>Enhancements and bug-fixes have been contributed by:</dt>
  <dd>(in alphabetical order)
    <br/>
    Danny Backx &lt;db@sunbim.be&gt;
    <br/>
    John Brezak &lt;brezak@ch.hp.com&gt;
    <br/>
    Frank da Cruz &lt;fdc@cc.columbia.edu&gt;
    <br/>
    David R. Linn &lt;drl@vuse.vanderbilt.edu&gt;
    <br/>
    Jim McKim &lt;mckim@lerc.nasa.gov&gt;
    <br/>
    Gordon W. Ross &lt;gwr@mc.com&gt;
    <br/>
    Jason Zions &lt;jazz@hal.com&gt;</dd>
</dl>
</section>
<section class="Sh">
<h1 class="Sh" id="SEE_ALSO"><a class="permalink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
bootptab(5), inetd(8), tftpd(8)
<p class="Pp">DARPA Internet Request For Comments:</p>
<dl class="Bl-tag">
  <dt>RFC951</dt>
  <dd>Bootstrap Protocol</dd>
  <dt>RFC1532</dt>
  <dd>Clarifications and Extensions for the Bootstrap Protocol</dd>
  <dt>RFC1533</dt>
  <dd>DHCP Options and BOOTP Vendor Extensions</dd>
</dl>
</section>
</div>
<table class="foot">
  <tr>
    <td class="foot-date">November 06, 1993</td>
    <td class="foot-os">Carnegie Mellon University</td>
  </tr>
</table>
</body>
</html>
