<!DOCTYPE html>
<html>
<!-- This is an automatically generated file.  Do not edit.
   Copyright (c) 1988, 1989, 1991 Carnegie Mellon University
  
  	$NetBSD: bootptab.5,v 1.7 2012/04/21 12:27:30 roy Exp $
   -->
<head>
  <meta charset="utf-8"/>
  <link rel="stylesheet" href="../style.css" type="text/css" media="all"/>
  <title>BOOTPTAB(5)</title>
</head>
<body>
<table class="head">
  <tr>
    <td class="head-ltitle">BOOTPTAB(5)</td>
    <td class="head-vol">File Formats Manual</td>
    <td class="head-rtitle">BOOTPTAB(5)</td>
  </tr>
</table>
<div class="manual-text">
<p class="Pp"></p>
<section class="Sh">
<h1 class="Sh" id="NAME"><a class="permalink" href="#NAME">NAME</a></h1>
bootptab - Internet Bootstrap Protocol server database
</section>
<section class="Sh">
<h1 class="Sh" id="DESCRIPTION"><a class="permalink" href="#DESCRIPTION">DESCRIPTION</a></h1>
The <i>bootptab</i> file is the configuration database file for <i>bootpd</i>,
  the Internet Bootstrap Protocol server. Its format is similar to that of
  <i>capfile</i>(5) in which two-character case-sensitive tag symbols are used
  to represent host parameters. These parameter declarations are separated by
  colons (:), with a general format of:
<p class="Pp"><i>	hostname:tg=value:tg=value:tg=value:</i></p>
<p class="Pp">where <i>hostname</i> is the actual name of a bootp client (or a
    &quot;dummy entry&quot;), and <i>tg</i> is a two-character tag symbol.
    Replies are returned to clients only if an entry with the client's Ethernet
    or IP address exists in the <i>booptab</i> file. Dummy entries have an
    invalid hostname (one with a &quot;.&quot; as the first character) and are
    used to provide default values used by other entries via the
    <b>tc=.dummy-entry</b> mechanism. Most tags must be followed by an equal
    sign and a value as above. Some may also appear in a boolean form with no
    value (i.e. :<i>tg</i>:). The currently recognized tags are:</p>
<p class="Pp">	bf	Bootfile
  <br/>
  	bs	Bootfile size in 512-octet blocks
  <br/>
  	cs	Cookie server address list
  <br/>
  	df	Merit dump file
  <br/>
  	dn	Domain name
  <br/>
  	ds	Domain name server address list
  <br/>
  	ef	Extension file
  <br/>
  	gw	Gateway address list
  <br/>
  	ha	Host hardware address
  <br/>
  	hd	Bootfile home directory
  <br/>
  	hn	Send client's hostname to client
  <br/>
  	ht	Host hardware type (see Assigned Numbers RFC)
  <br/>
  	im	Impress server address list
  <br/>
  	ip	Host IP address
  <br/>
  	lg	Log server address list
  <br/>
  	lp	LPR server address list
  <br/>
  	ns	IEN-116 name server address list
  <br/>
  	nt	NTP (time) Server (RFC 1129)
  <br/>
  	ra	Reply address override
  <br/>
  	rl	Resource location protocol server address list
  <br/>
  	rp	Root path to mount as root
  <br/>
  	sa	TFTP server address client should use
  <br/>
  	sm	Host subnet mask
  <br/>
  	sw	Swap server address
  <br/>
  	tc	Table continuation (points to similar &quot;template&quot; host entry)
  <br/>
  	td	TFTP root directory used by &quot;secure&quot; TFTP servers
  <br/>
  	to	Time offset in seconds from UTC
  <br/>
  	ts	Time server address list
  <br/>
  	vm	Vendor magic cookie selector
  <br/>
  	yd	YP (NIS) domain name
  <br/>
  	ys	YP (NIS) server address</p>
<p class="Pp"></p>
<p class="Pp">There is also a generic tag, T<i>n</i>, where <i>n</i> is an
    RFC1084 vendor field tag number. Thus it is possible to immediately take
    advantage of future extensions to RFC1084 without being forced to modify
    <i>bootpd</i> first. Generic data may be represented as either a stream of
    hexadecimal numbers or as a quoted string of ASCII characters. The length of
    the generic data is automatically determined and inserted into the proper
    field(s) of the RFC1084-style bootp reply.</p>
<p class="Pp">The following tags take a whitespace-separated list of IP
    addresses: <b>cs</b>, <b>ds</b>, <b>gw</b>, <b>im</b>, <b>lg</b>, <b>lp</b>,
    <b>ns</b>, <b>nt</b>, <b>ra</b>, <b>rl</b>, and <b>ts</b>. The <b>ip</b>,
    <b>sa</b>, <b>sw</b>, <b>sm</b>, and <b>ys</b> tags each take a single IP
    address. All IP addresses are specified in standard Internet &quot;dot&quot;
    notation and may use decimal, octal, or hexadecimal numbers (octal numbers
    begin with 0, hexadecimal numbers begin with '0x' or '0X'). Any IP addresses
    may alternatively be specified as a hostname, causing <i>bootpd</i> to
    lookup the IP address for that host name using gethostbyname(3). If the
    <b>ip</b> tag is not specified, <i>bootpd</i> will determine the IP address
    using the entry name as the host name. (Dummy entries use an invalid host
    name to avoid automatic IP lookup.)</p>
<p class="Pp">The <b>ht</b> tag specifies the hardware type code as either an
    unsigned decimal, octal, or hexadecimal integer or one of the following
    symbolic names: <b>ethernet</b> or <b>ether</b> for 10Mb Ethernet,
    <b>ethernet3</b> or <b>ether3</b> for 3Mb experimental Ethernet,
    <b>ieee802</b>, <b>tr</b>, or <b>token-ring</b> for IEEE 802 networks,
    <b>pronet</b> for Proteon ProNET Token Ring, or <b>chaos</b>, <b>arcnet</b>,
    or <b>ax.25</b> for Chaos, ARCNET, and AX.25 Amateur Radio networks,
    respectively. The <b>ha</b> tag takes a hardware address which may be
    specified as a host name or in numeric form. Note that the numeric form
    <i>must</i> be specified in hexadecimal; optional periods and/or a leading
    '0x' may be included for readability. The <b>ha</b> tag must be preceded by
    the <b>ht</b> tag (either explicitly or implicitly; see <b>tc</b> below). If
    the hardware address is not specified and the type is specified as either
    &quot;ethernet&quot; or &quot;ieee802&quot;, then <i>bootpd</i> will try to
    determine the hardware address using ether_hostton(3).</p>
<p class="Pp">The hostname, home directory, and bootfile are ASCII strings which
    may be optionally surrounded by double quotes (&quot;). The client's request
    and the values of the <b>hd</b> and <b>bf</b> symbols determine how the
    server fills in the bootfile field of the bootp reply packet.</p>
<p class="Pp">If the <b>bf</b> option is specified, its value is copied into the
    reply packet. Otherwise, the name supplied in the client request is used. If
    the <b>hd</b> option is specified, its value is prepended to the boot file
    in the reply packet, otherwise the path supplied in the client request is
    used. The existence of the boot file is NOT verified by <i>bootpd</i>
    because the boot file may be on some other machine.</p>
<p class="Pp">The <b>bs</b> option specified the size of the boot file. It can
    be written as <b>bs</b>=auto which causes <i>bootpd</i> to determine the
    boot file size automatically.</p>
<p class="Pp">Some newer versions of <i>tftpd</i> provide a security feature to
    change their root directory using the <i>chroot</i>(2) system call. The
    <b>td</b> tag may be used to inform <i>bootpd</i> of this special root
    directory used by <i>tftpd</i>. (One may alternatively use the <i>bootpd</i>
    &quot;-c chdir&quot; option.) The <b>hd</b> tag is actually relative to the
    root directory specified by the <b>td</b> tag. For example, if the real
    absolute path to your BOOTP client bootfile is
    /tftpboot/bootfiles/bootimage, and <i>tftpd</i> uses /tftpboot as its
    &quot;secure&quot; directory, then specify the following in
  <i>bootptab</i>:</p>
<p class="Pp">	:td=/tftpboot:hd=/bootfiles:bf=bootimage:</p>
<p class="Pp">If your bootfiles are located directly in /tftpboot, use:</p>
<p class="Pp">	:td=/tftpboot:hd=/:bf=bootimage:</p>
<p class="Pp">The <b>sa</b> tag may be used to specify the IP address of the
    particular TFTP server you wish the client to use. In the absence of this
    tag, <i>bootpd</i> will tell the client to perform TFTP to the same machine
    <i>bootpd</i> is running on.</p>
<p class="Pp">The time offset <b>to</b> may be either a signed decimal integer
    specifying the client's time zone offset in seconds from UTC, or the keyword
    <b>auto</b> which uses the server's time zone offset. Specifying the
    <b>to</b> symbol as a boolean has the same effect as specifying <b>auto</b>
    as its value.</p>
<p class="Pp">The bootfile size <b>bs</b> may be either a decimal, octal, or
    hexadecimal integer specifying the size of the bootfile in 512-octet blocks,
    or the keyword <b>auto</b> which causes the server to automatically
    calculate the bootfile size at each request. As with the time offset,
    specifying the <b>bs</b> symbol as a boolean has the same effect as
    specifying <b>auto</b> as its value.</p>
<p class="Pp">The vendor magic cookie selector (the <b>vm</b> tag) may take one
    of the following keywords: <b>auto</b> (indicating that vendor information
    is determined by the client's request), <b>rfc1048</b> or <b>rfc1084</b>
    (which always forces an RFC1084-style reply), or <b>cmu</b> (which always
    forces a CMU-style reply).</p>
<p class="Pp">The <b>hn</b> tag is strictly a boolean tag; it does not take the
    usual equals-sign and value. It's presence indicates that the hostname
    should be sent to RFC1084 clients. <i>Bootpd</i> attempts to send the entire
    hostname as it is specified in the configuration file; if this will not fit
    into the reply packet, the name is shortened to just the host field (up to
    the first period, if present) and then tried. In no case is an
    arbitrarily-truncated hostname sent (if nothing reasonable will fit, nothing
    is sent).</p>
<p class="Pp">Often, many host entries share common values for certain tags
    (such as name servers, etc.). Rather than repeatedly specifying these tags,
    a full specification can be listed for one host entry and shared by others
    via the <b>tc</b> (table continuation) mechanism. Often, the template entry
    is a dummy host which doesn't actually exist and never sends bootp requests.
    This feature is similar to the <b>tc</b> feature of
    <i>capfile</i>(5)<i>.</i> Note that <i>bootpd</i> allows the <b>tc</b> tag
    symbol to appear anywhere in the host entry, unlike <i>capfile</i> which
    requires it to be the last tag. Information explicitly specified for a host
    always overrides information implied by a <b>tc</b> tag symbol, regardless
    of its location within the entry. The value of the <b>tc</b> tag may be the
    hostname or IP address of any host entry previously listed in the
    configuration file.</p>
<p class="Pp">Sometimes it is necessary to delete a specific tag after it has
    been inferred via <b>tc</b>. This can be done using the construction
    <i>tag</i><b>@</b> which removes the effect of <i>tag</i> as in
    <i>capfile</i>(5). For example, to completely undo an IEN-116 name server
    specification, use &quot;:ns@:&quot; at an appropriate place in the
    configuration entry. After removal with <b>@</b>, a tag is eligible to be
    set again through the <b>tc</b> mechanism.</p>
<p class="Pp">Blank lines and lines beginning with &quot;#&quot; are ignored in
    the configuration file. Host entries are separated from one another by
    newlines; a single host entry may be extended over multiple lines if the
    lines end with a backslash (\). It is also acceptable for lines to be longer
    than 80 characters. Tags may appear in any order, with the following
    exceptions: the hostname must be the very first field in an entry, and the
    hardware type must precede the hardware address.</p>
<p class="Pp">An example <i>/etc/bootptab</i> file follows:</p>
<p class="Pp"></p>
<pre>
	# Sample bootptab file (domain=andrew.cmu.edu)
	.default:\
		:hd=/usr/boot:bf=null:\
		:ds=netserver, lancaster:\
		:ns=pcs2, pcs1:\
		:ts=pcs2, pcs1:\
		:sm=255.255.255.0:\
		:gw=gw.cs.cmu.edu:\
		:hn:to=-18000:
	carnegie:ht=6:ha=7FF8100000AF:tc=.default:
	baldwin:ht=1:ha=0800200159C3:tc=.default:
	wylie:ht=1:ha=00DD00CADF00:tc=.default:
	arnold:ht=1:ha=0800200102AD:tc=.default:
	bairdford:ht=1:ha=08002B02A2F9:tc=.default:
	bakerstown:ht=1:ha=08002B0287C8:tc=.default:
	# Special domain name server and option tags for next host
	butlerjct:ha=08002001560D:ds=128.2.13.42:\
		:T37=0x12345927AD3BCF:\
		:T99=&quot;Special ASCII string&quot;:\
		:tc=.default:
	gastonville:ht=6:ha=7FFF81000A47:tc=.default:
	hahntown:ht=6:ha=7FFF81000434:tc=.default:
	hickman:ht=6:ha=7FFF810001BA:tc=.default:
	lowber:ht=1:ha=00DD00CAF000:tc=.default:
	mtoliver:ht=1:ha=00DD00FE1600:tc=.default:
</pre>
</section>
<section class="Sh">
<h1 class="Sh" id="FILES"><a class="permalink" href="#FILES">FILES</a></h1>
/etc/bootptab
<p class="Pp"></p>
</section>
<section class="Sh">
<h1 class="Sh" id="SEE_ALSO"><a class="permalink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
bootpd(8), tftpd(8),
<br/>
DARPA Internet Request For Comments RFC951, RFC1048, RFC1084, Assigned Numbers
</section>
</div>
<table class="foot">
  <tr>
    <td class="foot-date">October 31, 1991</td>
    <td class="foot-os">4.3 Berkeley Distribution</td>
  </tr>
</table>
</body>
</html>
